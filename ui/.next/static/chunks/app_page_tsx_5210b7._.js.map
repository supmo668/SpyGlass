{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/gemechutaye/Downloads/spyGlass/SpyGlass-zkysar-ui%202/ui/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  CartesianGrid,\n  Legend,\n} from \"recharts\";\nimport Papa from \"papaparse\";\nimport { Search, Sparkles, TrendingUp, Zap, Download } from \"lucide-react\";\nimport { motion } from \"framer-motion\";\n\n// Import necessary shadcn components\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\n\ninterface CSVRow {\n  Trend: string;\n  \"Startup Opportunity\": string;\n  \"Related trends\": string;\n  \"Growth rate, WoW\": string;\n  \"YC chances\": string;\n  \"2025\": string;\n  \"2026\": string;\n  \"2027\": string;\n  \"2028\": string;\n  \"2029\": string;\n  \"2030\": string;\n}\n\ninterface ProcessedRow\n  extends Omit<\n    CSVRow,\n    \"2025\" | \"2026\" | \"2027\" | \"2028\" | \"2029\" | \"2030\"\n  > {\n  \"2025\": number;\n  \"2026\": number;\n  \"2027\": number;\n  \"2028\": number;\n  \"2029\": number;\n  \"2030\": number;\n}\n\nconst years = [\"2025\", \"2026\", \"2027\", \"2028\", \"2029\", \"2030\"];\n\nexport default function Home() {\n  const [csvData, setCsvData] = useState<ProcessedRow[]>([]);\n  const [selectedTrend, setSelectedTrend] = useState<ProcessedRow | null>(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filteredData, setFilteredData] = useState<ProcessedRow[]>([]);\n\n  useEffect(() => {\n    fetch(\"/Gemini Advanced 20 Pro Experimental.csv\")\n      .then((res) => res.text())\n      .then((csvText) => {\n        Papa.parse(csvText, {\n          header: true,\n          skipEmptyLines: true,\n          complete: (results) => {\n            const processed: ProcessedRow[] = results.data.map((row: CSVRow) => {\n              const newRow = { ...row } as ProcessedRow;\n              years.forEach((year) => {\n                newRow[year] = parseFloat(newRow[year]?.replace(\"%\", \"\") || \"0\");\n              });\n              return newRow;\n            });\n            setCsvData(processed);\n            setFilteredData(processed);\n          },\n        });\n      });\n  }, []);\n\n  useEffect(() => {\n    const filtered = csvData.filter((row) =>\n      row.Trend.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n    setFilteredData(filtered);\n  }, [searchQuery, csvData]);\n\n  const pivotedData = years.map((year) => {\n    const obj: { year: string; [key: string]: number | string } = { year };\n    filteredData.forEach((row) => {\n      obj[row.Trend] = row[year];\n    });\n    return obj;\n  });\n\n  const colors = [\n    \"#6366f1\", // Indigo\n    \"#ec4899\", // Pink\n    \"#06b6d4\", // Cyan\n    \"#f59e0b\", // Amber\n    \"#10b981\", // Emerald\n    \"#8b5cf6\", // Violet\n    \"#f43f5e\", // Rose\n    \"#3b82f6\", // Blue\n    \"#84cc16\", // Lime\n    \"#14b8a6\", // Teal\n  ];\n\n  const getColor = (trend: string, idx: number) => colors[idx % colors.length];\n\n  const handleMouseMove = (state: any) => {\n    if (state && state.activePayload && state.activePayload.length > 0) {\n      const trendName = state.activePayload[0].dataKey;\n      const selected = csvData.find((row) => row.Trend === trendName);\n      if (selected) setSelectedTrend(selected);\n    }\n  };\n\n  const CustomTooltip = ({ active, payload, label }: any) => {\n    if (active && payload && payload.length) {\n      return (\n        <Card className=\"border-none shadow-lg\">\n          <CardContent className=\"p-4\">\n            <p className=\"text-sm font-medium mb-2\">Year {label}</p>\n            <div className=\"space-y-1\">\n              {payload.map((entry: any) => (\n                <div\n                  key={entry.name}\n                  className=\"flex items-center space-x-2\"\n                >\n                  <div\n                    className=\"w-2 h-2 rounded-full\"\n                    style={{ backgroundColor: entry.color }}\n                  />\n                  <span className=\"text-sm font-medium\">{entry.name}</span>\n                  <span className=\"text-sm text-gray-500\">\n                    {entry.value.toFixed(1)}%\n                  </span>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800\">\n      {/* Header */}\n      <header className=\"bg-white/80 dark:bg-gray-800/80 backdrop-blur-lg border-b border-gray-200 dark:border-gray-700 sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center space-x-2\">\n              <Sparkles className=\"h-6 w-6 text-indigo-600 dark:text-indigo-400\" />\n              <h1 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                SpyGlass Trends\n              </h1>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                <Input\n                  type=\"text\"\n                  placeholder=\"Search trends...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"pl-10 w-64\"\n                />\n              </div>\n              <Button variant=\"default\">\n                <Download className=\"h-4 w-4 mr-2\" />\n                Export Report\n              </Button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Main content */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Chart Section */}\n          <div className=\"lg:col-span-2 space-y-8\">\n            <Card className=\"overflow-hidden\">\n              <CardHeader className=\"space-y-1\">\n                <div className=\"flex items-center justify-between\">\n                  <CardTitle className=\"text-xl font-semibold\">\n                    Technology Adoption Trends\n                  </CardTitle>\n                  <Select defaultValue=\"5y\">\n                    <SelectTrigger className=\"w-32\">\n                      <SelectValue placeholder=\"Time Range\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"5y\">5 Years</SelectItem>\n                      <SelectItem value=\"3y\">3 Years</SelectItem>\n                      <SelectItem value=\"1y\">1 Year</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </CardHeader>\n              <CardContent>\n                <div className=\"h-[600px] w-full\">\n                  <ResponsiveContainer>\n                    <LineChart\n                      data={pivotedData}\n                      onMouseMove={handleMouseMove}\n                      margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\n                    >\n                      <defs>\n                        {colors.map((color, index) => (\n                          <linearGradient\n                            key={`gradient-${index}`}\n                            id={`gradient-${index}`}\n                            x1=\"0\"\n                            y1=\"0\"\n                            x2=\"0\"\n                            y2=\"1\"\n                          >\n                            <stop\n                              offset=\"0%\"\n                              stopColor={color}\n                              stopOpacity={0.4}\n                            />\n                            <stop\n                              offset=\"100%\"\n                              stopColor={color}\n                              stopOpacity={0}\n                            />\n                          </linearGradient>\n                        ))}\n                      </defs>\n                      <CartesianGrid\n                        strokeDasharray=\"3 3\"\n                        stroke=\"#e5e7eb\"\n                        opacity={0.4}\n                      />\n                      <XAxis\n                        dataKey=\"year\"\n                        stroke=\"#6b7280\"\n                        fontSize={12}\n                        tickLine={false}\n                      />\n                      <YAxis\n                        stroke=\"#6b7280\"\n                        fontSize={12}\n                        tickLine={false}\n                        domain={[0, 100]}\n                        tickFormatter={(value) => `${value}%`}\n                      />\n                      <Tooltip content={<CustomTooltip />} />\n                      {filteredData.map((row, idx) => (\n                        <Line\n                          key={row.Trend}\n                          type=\"monotone\"\n                          dataKey={row.Trend}\n                          stroke={colors[idx % colors.length]}\n                          strokeWidth={2}\n                          dot={{\n                            r: 4,\n                            strokeWidth: 2,\n                            fill: \"white\",\n                          }}\n                          activeDot={{\n                            r: 6,\n                            strokeWidth: 2,\n                            fill: colors[idx % colors.length],\n                          }}\n                          fill={`url(#gradient-${idx})`}\n                        />\n                      ))}\n                    </LineChart>\n                  </ResponsiveContainer>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Trend Cards Grid */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              {filteredData.map((trend, idx) => (\n                <motion.div\n                  key={trend.Trend}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: idx * 0.1 }}\n                >\n                  <Card\n                    className={`cursor-pointer transition-all hover:shadow-lg ${\n                      selectedTrend?.Trend === trend.Trend\n                        ? \"ring-2 ring-indigo-500\"\n                        : \"\"\n                    }`}\n                    onClick={() => setSelectedTrend(trend)}\n                  >\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex items-start justify-between\">\n                        <div>\n                          <h3 className=\"font-semibold text-gray-900 dark:text-white\">\n                            {trend.Trend}\n                          </h3>\n                          <p className=\"text-sm text-gray-500 mt-1\">\n                            {trend[\"Startup Opportunity\"]}\n                          </p>\n                        </div>\n                        <Badge\n                          variant=\"secondary\"\n                          className=\"flex items-center space-x-1\"\n                        >\n                          <TrendingUp className=\"h-3 w-3\" />\n                          <span>{trend[\"Growth rate, WoW\"]}</span>\n                        </Badge>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              ))}\n            </div>\n          </div>\n\n          {/* Details Panel */}\n          <div className=\"lg:col-span-1\">\n            <Card className=\"sticky top-24\">\n              <CardHeader>\n                <CardTitle>Trend Details</CardTitle>\n              </CardHeader>\n              <CardContent>\n                {selectedTrend ? (\n                  <div className=\"space-y-6\">\n                    <div>\n                      <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                        {selectedTrend.Trend}\n                      </h2>\n                      <p className=\"mt-2 text-gray-600 dark:text-gray-300\">\n                        {selectedTrend[\"Startup Opportunity\"]}\n                      </p>\n                    </div>\n\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <Card>\n                        <CardContent className=\"p-4\">\n                          <div className=\"flex items-center space-x-2\">\n                            <TrendingUp className=\"h-4 w-4 text-green-500\" />\n                            <div>\n                              <p className=\"text-sm text-gray-500\">Growth Rate</p>\n                              <p className=\"font-semibold\">\n                                {selectedTrend[\"Growth rate, WoW\"]}\n                              </p>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n\n                      <Card>\n                        <CardContent className=\"p-4\">\n                          <div className=\"flex items-center space-x-2\">\n                            <Zap className=\"h-4 w-4 text-yellow-500\" />\n                            <div>\n                              <p className=\"text-sm text-gray-500\">YC Chances</p>\n                              <p className=\"font-semibold\">\n                                {selectedTrend[\"YC chances\"]}\n                              </p>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    </div>\n\n                    <div>\n                      <h3 className=\"font-medium text-gray-900 dark:text-white mb-2\">\n                        Related Trends\n                      </h3>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {selectedTrend[\"Related trends\"]\n                          .split(\",\")\n                          .map((trend) => (\n                            <Badge\n                              key={trend.trim()}\n                              variant=\"secondary\"\n                              className=\"text-sm\"\n                            >\n                              {trend.trim()}\n                            </Badge>\n                          ))}\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"flex items-center justify-center h-full\">\n                    <p className=\"text-lg text-gray-500 text-center\">\n                      Hover over or select a trend line to view detailed information\n                    </p>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 924, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}